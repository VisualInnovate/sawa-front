import{_ as f,y as d,o as i,e as l,q as c,x as _,h as s,t as a,a8 as T,w as m,D as p,F as u,z as y,n as v,a9 as D,i as g,l as V}from"./main-d07376db.js";import{V as b}from"./VForm-2ae28342.js";const k={data(){return{selectedValue:"",sessionTypes:[],treatmentTypes:[],doctors:[],roomType:"",formData:{title:"",capacity:"",room_type_id:"",session:"",user_id:"",treatment_id:""}}},methods:{getAllDoctor(){d.get("api/all/doctors").then(e=>{this.doctors=e.data.doctors,console.log(this.doctors)}).catch(e=>{console.error("Error retrieving doctors:",e)})},getTypesesstion(){d.get("api/session-types").then(e=>{this.sessionTypes=e.data.sessionTypes,console.log(this.sessionTypes)}).catch(e=>{console.error("Error retrieving doctors:",e)})},getTreatmentTypes(){d.get("api/treatment-types").then(e=>{this.treatmentTypes=e.data.treatmentTypes,console.log(this.treatmentTypes)}).catch(e=>{console.error("Error retrieving Appointment Types:",e)})},createRoom(){const e={title:this.formData.title,user_id:this.formData.user_id,capacity:this.formData.capacity,session:this.formData.session,room_type_id:this.formData.room_type_id,treatment_id:this.formData.treatment_id};d.post("/api/store_room",e).then(o=>{console.log("this add data is sussec:",o),this.$router.push({name:"Rooms"})}).catch(o=>{console.error("Error seeding data:",o)})}},mounted(){this.getTypesesstion(),this.getAllDoctor(),this.getTreatmentTypes()}},U={class:"name-input"},w={for:"title"},E={for:"selectedValue"},S=["value"],B={for:"doctors"},F=["kay","value"],A={for:"doctors"},C=["kay","value"],M={for:"roomType"},N={value:"1"},R={value:"2"},q={class:"input-container"},z={for:"roomType",class:"input-label"};function I(e,o,L,j,r,h){return i(),l("div",null,[c(b,{onSubmit:V(h.createRoom,["prevent"])},{default:_(()=>[s("div",U,[s("label",w,a(e.$t("room")),1),c(T,{modelValue:r.formData.title,"onUpdate:modelValue":o[0]||(o[0]=t=>r.formData.title=t),"hide-details":""},null,8,["modelValue"]),s("label",E,a(e.$t("typesessaion")),1),m(s("select",{"onUpdate:modelValue":o[1]||(o[1]=t=>e.session=t),class:"custom-select"},[(i(!0),l(u,null,y(r.sessionTypes,(t,n)=>(i(),l("option",{key:n.value,value:t.value},a(t.title),9,S))),128))],512),[[p,e.session]]),s("label",B,a(e.$t("Typetreatment")),1),m(s("select",{"onUpdate:modelValue":o[2]||(o[2]=t=>r.formData.treatment_id=t),class:"custom-select"},[(i(!0),l(u,null,y(r.treatmentTypes,(t,n)=>(i(),l("option",{kay:n,value:t.id},a(t.title),9,F))),256))],512),[[p,r.formData.treatment_id]]),s("label",A,a(e.$t("roomdoctor")),1),m(s("select",{"onUpdate:modelValue":o[3]||(o[3]=t=>r.formData.user_id=t),class:"custom-select"},[(i(!0),l(u,null,y(r.doctors,(t,n)=>(i(),l("option",{kay:n,value:t.id},a(t.title),9,C))),256))],512),[[p,r.formData.user_id]]),s("label",M,a(e.$t("typeroom")),1),m(s("select",{"onUpdate:modelValue":o[4]||(o[4]=t=>r.formData.room_type_id=t),class:"custom-select"},[s("option",N,a(e.$t("typeroom1")),1),s("option",R,a(e.$t("typeroom2")),1)],512),[[p,r.formData.room_type_id]]),s("div",q,[s("label",z,a(e.$t("typeroom")),1),m(s("input",{type:"number",id:"roomType","onUpdate:modelValue":o[5]||(o[5]=t=>r.formData.capacity=t),class:"number-input"},null,512),[[v,r.formData.capacity]])])]),c(D,{type:"submit",class:"mt-2 seed",style:{width:"606px"}},{default:_(()=>[g(a(e.$t("submit")),1)]),_:1})]),_:1},8,["onSubmit"])])}const H=f(k,[["render",I],["__scopeId","data-v-c6757c5c"]]);export{H as default};
