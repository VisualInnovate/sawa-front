import{_ as x,c as g,o as t,d as r,e as s,F as l,z as d,t as p,O as u}from"./main-8cb28508.js";const w={name:"SquareGrid",data(){return{mainSquares:[]}},methods:{getresulte(){g.get("api/mileston-levels/flow-chart/1").then(o=>{console.log(o.data.data),this.mainSquares=o.data.data[0].subtests}).catch(o=>{console.error("Error retrieving Appointment Types:",o)})}},mounted(){this.getresulte()}},f=s("div",null,[s("h1",{class:"w-full py-3 text-3xl font-bold text-center"},"LEVEL 1")],-1),v={class:"grid grid-cols-9",style:{border:"1px 1px 0px 0px solid black"}},y={class:"grid grid-cols-1"},k={class:"m-revert h-full text-center pt-10"},m={class:"grid grid-cols-1"},E={class:"w-20 text-center"};function B(o,L,$,z,c,F){var a;return t(),r(l,null,[f,s("div",v,[s("div",y,[(t(!0),r(l,null,d((a=c.mainSquares[0])==null?void 0:a.questions,(b,n)=>(t(),r("div",{class:"w-20 h-20 m-auto text-center",key:n},[s("p",k,p(n+1),1)]))),128))]),(t(),r(l,null,d(5,(b,n)=>{var i,_;return s("div",m,[s("div",E,p((i=c.mainSquares[0])==null?void 0:i.subtest_name),1),(t(!0),r(l,null,d((_=c.mainSquares[0])==null?void 0:_.questions,(e,h)=>(t(),r("div",{style:{border:"1px solid black !important"},class:"w-20 h-20 border border-black flex flex-col justify-between",key:h},[s("div",{style:{border:"1px dotted black !important"},class:u(["h-1/2 border border-blue-500",{[`bg-[#${e==null?void 0:e.answer_color}]`]:e.answer_score==1,"":e.answer_score==.5||e.answer_score==0}])},null,2),s("div",{class:u(["h-1/2 border border-blue-500",{[`bg-[#${e==null?void 0:e.answer_color}]`]:e.answer_score==1||e.answer_score==.5,"":e.answer_score==0}])},null,2)]))),128))])}),64))])],64)}const j=x(w,[["render",B]]);export{j as default};
