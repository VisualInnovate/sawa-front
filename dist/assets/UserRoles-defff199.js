import{_ as u,c as l,o as n,d as c,i as p,ae as _,f as t,a1 as g,w as a,e as d,ac as f,F as x,z as V,x as k,h as w,ad as C}from"./main-a0d75a22.js";import{V as h,a as P}from"./VRow-a2100cb6.js";import{V as b}from"./VCheckbox-d1699498.js";const v={props:["id"],data(){return{permissions:[],user_permissions:[],new_permissions:[],checked_permissions:[],permission_name:"",alert:{show:!1,text:"",color:""}}},methods:{getPermissions(){l.post("/api/permissions",{name:this.permission_name,name:this.permission_name}).then(e=>{this.permissions=e.data.permissions.data,console.log(e)}).catch(e=>{console.log(e)})},addPermissions(){console.log(this.checked_permissions),l.post(`/api/users/${this.id}/add-permissions`,{roles:this.checked_permissions}).then(e=>{this.alert.color="success",this.alert.text=e.data.message,this.alert.show=!0,setTimeout(()=>{this.alert.show=!1},3e3),console.log(e)}).catch(e=>{this.alert.color="error",this.alert.text=e.response.data.message,this.alert.show=!0,setTimeout(()=>{this.alert.show=!1},3e3),console.log(e)})},getUserPermissions(){l.get(`/api/users/${this.id}/permissions`).then(e=>{this.user_permissions=e.data.user_permissions,this.user_permissions.forEach(s=>{this.checked_permissions[s.id]=s.id})}).catch(e=>{console.log(e)})},onCheckboxChange(e,s){s===!0&&this.checked_permissions.push(e),console.log(e),console.log(s)}},mounted(){this.getUserPermissions(),this.getPermissions()},watch:{permission_name(){this.getPermissions()}}},U={style:{margin:"1.5rem 0",padding:"auto 0"}},B={class:"d-flex flex-row flex-wrap"};function y(e,s,N,T,o,m){return n(),c("div",U,[p(t(g,{type:o.alert.color,text:o.alert.text},null,8,["type","text"]),[[_,o.alert.show]]),t(P,null,{default:a(()=>[t(h,{sm:"12"},{default:a(()=>[d("div",null,[t(h,{sm:"12",md:"6"},{default:a(()=>[t(f,{modelValue:o.permission_name,"onUpdate:modelValue":s[0]||(s[0]=i=>o.permission_name=i),label:"Permission Name",style:{margin:"2rem 0"},"hide-details":"auto"},null,8,["modelValue"])]),_:1}),d("div",B,[(n(!0),c(x,null,V(o.permissions,(i,F)=>(n(),k(b,{modelValue:o.checked_permissions[i.id],"onUpdate:modelValue":r=>o.checked_permissions[i.id]=r,label:i.name,color:"success",value:i.id,onChange:r=>m.onCheckboxChange(i.id,r.target.checked)},null,8,["modelValue","onUpdate:modelValue","label","value","onChange"]))),256))])])]),_:1})]),_:1}),t(C,{color:"success",onClick:m.addPermissions},{default:a(()=>[w(" Submit ")]),_:1},8,["onClick"])])}const z=u(v,[["render",y]]);export{z as default};
