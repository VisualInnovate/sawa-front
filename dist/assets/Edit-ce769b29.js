import{_ as c,D as y,k as f,z as l,l as p,o as _,e as h,h as a,t as m,x as r,y as u,Z as g,i as v,n as D}from"./main-d9195fcd.js";import{V}from"./VForm-ae144aa8.js";const T={components:{Dropdown:y,InputText:f},data(){return{selectedCity:null,selectedValue:"",sessionTypes:[],treatmentTypes:[],doctors:[],roomType:[],formData:{title:"",capacity:15,room_type_id:"",sessation_id:"",user_id:"",treatment_id:""}}},computed:{locale(){return this.$i18n.locale}},methods:{arr(){return this.roomType=[{name:this.$t("typeroom1"),value:1},{name:this.$t("typeroom2"),value:2}]},getAllDoctor(){l.get("api/all/doctors").then(t=>{this.doctors=t.data.doctors,console.log(this.doctors)}).catch(t=>{console.error("Error retrieving doctors:",t)})},getTypesesstion(){l.get("api/session-types").then(t=>{this.sessionTypes=t.data.sessionTypes,console.log(this.sessionTypes)}).catch(t=>{console.error("Error retrieving doctors:",t)})},getTreatmentTypes(){l.get("api/treatment-types").then(t=>{this.treatmentTypes=t.data.treatmentTypes,console.log(this.treatmentTypes)}).catch(t=>{console.error("Error retrieving Appointment Types:",t)})},roompage(){this.$router.push({name:"Rooms"})},updateData(){l.post(`/api/update/room/${this.$route.params.id}`,this.formData).then(t=>{console.log("Data updated:",t.data),this.isSuccessModalOpen=!0,this.$router.push({name:"Rooms"})}).catch(t=>{console.error("Error updating data:",t)})},getoneRoom(t){l.get(`api/get/room/${t}`).then(e=>{this.formData.capacity=e.data.rooms.capacity,this.formData.user_id=e.data.rooms.user.id,this.formData.room_type_id=e.data.rooms.room_type_id,this.formData.treatment_id=e.data.rooms.treatment_id,this.formData.title=e.data.rooms.title,this.formData.sessation_id=e.data.rooms.typesesation.id})}},mounted(){this.getTypesesstion(),this.getAllDoctor(),this.getTreatmentTypes(),this.getoneRoom(this.$route.params.id)}},b={class:"name-input shadow-md"},w={class:"py-4"},x={class:"card py-4 flex justify-content-center"},k={class:"card py-4 flex justify-content-center"},E={class:"card py-4 flex justify-content-center"},C={class:"card py-4 flex justify-content-center"},U={class:"py-4"};function R(t,e,$,j,o,n){const d=p("InputText"),i=p("Dropdown");return _(),h("div",null,[a("div",null,[a("p",{class:"text-xl p-4 text-[#135C65] cursor-pointer font-bold",onClick:e[0]||(e[0]=s=>n.roompage())},m(t.$t("room")),1)]),r(V,{onSubmit:D(t.createRoom,["prevent"])},{default:u(()=>[a("div",b,[a("div",w,[r(d,{style:{margin:"auto","text-align":"center","background-color":"#e7e7e7",border:"none","border-bottom":"2px solid black"},placeholder:t.$t("numberroom"),class:"w-full",type:"number",modelValue:o.formData.title,"onUpdate:modelValue":e[1]||(e[1]=s=>o.formData.title=s)},null,8,["placeholder","modelValue"])]),a("div",x,[r(i,{id:"pv_id_1",style:{direction:"ltr !important"},modelValue:o.formData.sessation_id,"onUpdate:modelValue":e[2]||(e[2]=s=>o.formData.sessation_id=s),"option-value":"id",options:o.sessionTypes,optionLabel:"title",placeholder:t.$t("typesessaion"),class:"w-full md:w-14rem"},null,8,["modelValue","options","placeholder"])]),a("div",k,[r(i,{id:"pv_id_1",style:{direction:"ltr !important"},modelValue:o.formData.treatment_id,"onUpdate:modelValue":e[3]||(e[3]=s=>o.formData.treatment_id=s),"option-value":"id",options:o.treatmentTypes,optionLabel:"title",placeholder:t.$t("Typetreatment"),class:"w-full md:w-14rem"},null,8,["modelValue","options","placeholder"])]),a("div",E,[r(i,{id:"pv_id_1",style:{direction:"ltr !important"},modelValue:o.formData.user_id,"onUpdate:modelValue":e[4]||(e[4]=s=>o.formData.user_id=s),"option-value":"id",options:o.doctors,optionLabel:"name",placeholder:t.$t("roomdoctor"),class:"w-full md:w-14rem"},null,8,["modelValue","options","placeholder"])]),a("div",C,[r(i,{id:"pv_id_1",style:{direction:"ltr !important"},modelValue:o.formData.room_type_id,"onUpdate:modelValue":e[5]||(e[5]=s=>o.formData.room_type_id=s),"option-value":"value",options:n.arr(),optionLabel:"name",placeholder:t.$t("typeroom"),class:"w-full md:w-14rem"},null,8,["modelValue","options","placeholder"])]),a("div",U,[r(d,{style:{margin:"auto","text-align":"center","background-color":"#e7e7e7",border:"none","border-bottom":"2px solid black"},class:"w-full",type:"number",modelValue:o.formData.capacity,"onUpdate:modelValue":e[6]||(e[6]=s=>o.formData.capacity=s)},null,8,["modelValue"])])]),r(g,{onClick:e[7]||(e[7]=s=>n.updateData()),class:"mt-5 seed m-auto",style:{width:"606px"}},{default:u(()=>[v(m(t.$t("submit")),1)]),_:1})]),_:1},8,["onSubmit"])])}const L=c(T,[["render",R],["__scopeId","data-v-01f35c94"]]);export{L as default};
